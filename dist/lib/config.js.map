{"version":3,"sources":["../../lib/config.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAeO,KAAK,2BAAM,cAAc;;IACzB,MAAM,2BAAM,aAAa;;IAGX,MAAM;AACZ,aADM,MAAM,CACX,IAAI,EAAE;8BADD,MAAM;;AAEnB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB;;iBAHgB,MAAM;AAKvB,WAAG;mBAAA,aAAC,GAAG,EAAE;AACL,oBAAI,GAAG,CAAC;;AAER,oBAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE;;AAEnC,uBAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrB,uBAAG,GAAG,IAAI,CAAC,MAAM,CAAC;;AAElB,2BAAO,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;AACtB,4BAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;;;;AAI5B,mCAAO,SAAS,CAAC;yBACpB;AACD,2BAAG,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;qBAC1B;;AAED,2BAAO,GAAG,CAAC;iBAEd;;AAED,uBAAO,SAAS,CAAC;aACpB;;AAED,WAAG;mBAAA,aAAC,GAAG,EAAE,KAAK,EAAE;AACZ,oBAAI,GAAG,EAAE,IAAI,CAAC;;AAEd,oBAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE;;AAEnC,uBAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrB,uBAAG,GAAG,IAAI,CAAC,MAAM,CAAC;;AAElB,2BAAO,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,4BAAI,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;;AAGnB,4BAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAC3B,+BAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;yBAClB;;AAED,2BAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;AAChB,4BAAI,GAAG,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;;;;AAInC,mCAAO,SAAS,CAAC;yBACpB;qBACJ;;AAED,2BAAQ,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAE;iBACrC;;AAED,uBAAO,SAAS,CAAC;aACpB;;AAED,WAAG;mBAAA,aAAC,GAAG,EAAE;AACL,sBAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC;;AAED,aAAK;mBAAA,eAAC,MAAM,EAAE;AACV,oBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC3B;;;;WAnEgB,MAAM;;;iBAAN,MAAM","file":"lib/config.js","sourcesContent":["/*───────────────────────────────────────────────────────────────────────────*\\\n │  Copyright (C) 2016 PayPal                                                 │\n │                                                                            │\n │  Licensed under the Apache License, Version 2.0 (the \"License\");           │\n │  you may not use this file except in compliance with the License.          │\n │  You may obtain a copy of the License at                                   │\n │                                                                            │\n │    http://www.apache.org/licenses/LICENSE-2.0                              │\n │                                                                            │\n │  Unless required by applicable law or agreed to in writing, software       │\n │  distributed under the License is distributed on an \"AS IS\" BASIS,         │\n │  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  │\n │  See the License for the specific language governing permissions and       │\n │  limitations under the License.                                            │\n \\*───────────────────────────────────────────────────────────────────────────*/\nimport Thing from 'core-util-is';\nimport Common from './common.js';\n\n\nexport default class Config {\n    constructor(data) {\n        this._store = data;\n    }\n\n    get(key) {\n        var obj;\n\n        if (Thing.isString(key) && key.length) {\n\n            key = key.split(':');\n            obj = this._store;\n\n            while (obj && key.length) {\n                if (obj.constructor !== Object) {\n                    // Do not allow traversal into complex types,\n                    // such as Buffer, Date, etc. So, this type\n                    // of key will fail: 'foo:mystring:length'\n                    return undefined;\n                }\n                obj = obj[key.shift()];\n            }\n\n            return obj;\n\n        }\n\n        return undefined;\n    }\n\n    set(key, value) {\n        var obj, prop;\n\n        if (Thing.isString(key) && key.length) {\n\n            key = key.split(':');\n            obj = this._store;\n\n            while (key.length - 1) {\n                prop = key.shift();\n\n                // Create new object for property, if nonexistent\n                if (!obj.hasOwnProperty(prop)) {\n                    obj[prop] = {};\n                }\n\n                obj = obj[prop];\n                if (obj && obj.constructor !== Object) {\n                    // Do not allow traversal into complex types,\n                    // such as Buffer, Date, etc. So, this type\n                    // of key will fail: 'foo:mystring:length'\n                    return undefined;\n                }\n            }\n\n            return (obj[key.shift()] = value);\n        }\n\n        return undefined;\n    }\n\n    use(obj) {\n        Common.merge(obj, this._store);\n    }\n\n    merge(config) {\n        this.use(config._store);\n    }\n}"]}